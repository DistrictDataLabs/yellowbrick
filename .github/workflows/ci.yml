# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on: [pull_request]

jobs:
  test_conda:
    name: Conda (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.7", "3.8"]
    steps:
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          auto-activate-base: true
          python-version: ${{ matrix.python-version }}
          channels: conda-forge
          environment-file: tests/requirements.txt
      - name: Conda info
        shell: bash -l {0}
        run: conda info
      - name: Add conda to system path
        shell: bash -l {0}
        run: |
          # $CONDA is an environment variable pointing to the root of the miniconda directory
          echo $CONDA/bin >> $GITHUB_PATH
      # - name: Install dependencies
      #   shell: bash -l {0}
      #   run: |
      #     conda env update --file  --name base
      - name: Test with pytest
        shell: bash -l {0}
        run: |
          conda install pytest
          python -m nltk.downloader popular
          make test

  test_pypi:
    name: PyPi (${{ matrix.python-version }}, ${{ matrix.os }})
    strategy:
      matrix:
        python-version: [3.7, 3.8]
        os: [ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f tests/requirements.txt ]; then pip install -r tests/requirements.txt; fi
        python -m pip install coveralls
    - name: Test with pytest
      run: |
        python -m nltk.downloader popular
        make test
    - name: Coveralls
      uses: AndreMiras/coveralls-python-action@develop
      with:
        parallel: true
        flag-name: Unit Test

  coveralls_finish:
    needs: test_pypi
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: AndreMiras/coveralls-python-action@develop
      with:
        parallel-finished: true