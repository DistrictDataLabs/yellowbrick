# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Yellowbrick CI

on:
  # Trigger on push to the primary branches and all versioned tags
  push:
    branches:
      - develop
      - main
    tags:
      - 'v*'
  # Trigger on pull request always (note the trailing colon)
  pull_request:

jobs:
  # Test Vanilla Python (using PyPI for dependencies) as a matrix.
  test_pypi:
    runs-on: ${{ matrix.os }}
    name: PyPi (${{ matrix.python-version }}, ${{ matrix.os }})
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r tests/requirements.txt
        python -m nltk.downloader popular

    - name: Run Unit Tests
      run: |
        make test

    - name: Upload Coverage
      uses: codecov/codecov-action@v1
      with:
        env_vars: OS,PYTHON
        name: codecov-umbrella
        fail_ci_if_error: false

  # Test Anaconda Python (using conda-forge for dependencies)
  test_conda:
    runs-on: ${{ matrix.os }}
    name: Conda (${{ matrix.python-version }}, ${{ matrix.os }})
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.8", "3.9"]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Conda ${{ matrix.python-version }}
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          channels: conda-forge,spyder-ide
          channel-priority: flexible

      - name: Conda Info
        shell: bash -l {0}
        run: conda info

      - name: Add conda to System $PATH
        shell: bash -l {0}
        run: |
          # $CONDA is an environment variable pointing to the root of the miniconda directory
          echo $CONDA/bin >> $GITHUB_PATH

      - name: Install Dependencies
        shell: bash -l {0}
        run: |
          conda config --set always_yes yes --set changeps1 no
          conda update -n base conda --yes
          conda env create -f tests/requirements.txt -n yellowbrick python=${{ matrix.python-version }}
          conda activate yellowbrick
          python -m nltk.downloader popular

      - name: Run Unit Tests
        shell: bash -l {0}
        run: |
          conda activate yellowbrick
          make test

      - name: Upload Coverage
        uses: codecov/codecov-action@v1
        with:
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false

  # Test building docs using Sphinx since this also runs a lot of Yellowbrick code
  test_docs:
    runs-on: ubuntu-latest
    name: Build Docs
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r docs/requirements.txt

      - name: Run Sphinx
        uses: ammaraskar/sphinx-action@master
        with:
          docs-folder: "docs/"
