dist: xenial
language: python
matrix:
  include:
    - name: "Python 3.6 on Xenial Linux"
      python: '3.6'

    - name: "Python 3.7 on Xenial Linux"
      python: '3.7'

    - name: "Miniconda 3.6 on Xenial Linux"
      env: ANACONDA="3.6"

    - name: "Miniconda 3.7 on Xenial Linux"
      env: ANACONDA="3.7"

before_install:
- sudo apt-get update;
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
    sudo apt-get build-dep python-scipy;
    MINICONDA_OS="Linux";
  fi

install:
- if [[ -z ${ANACONDA} ]]; then
      pip install -r requirements.txt;
      pip install -r tests/requirements.txt;
      pip install coveralls;
    else
      wget https://repo.anaconda.com/miniconda/Miniconda3-latest-$MINICONDA_OS-x86_64.sh -O miniconda.sh;
      bash miniconda.sh -b -p $HOME/miniconda;
      export PATH="$HOME/miniconda/bin:$PATH";
      hash -r;
      conda config --set always_yes yes --set changeps1 no;
      export BASE_PYTHON=`python -c 'import sys; version=sys.version_info[:3]; print("{0}.{1}.{2}".format(*version))'`;
      echo "Base Anaconda Python is $BASE_PYTHON";
      echo "Creating Anaconda Python $ANACONDA conda environment";
      conda update -n base conda --yes;
      conda config --add channels conda-forge;
      conda env create -f tests/requirements.txt -n yellowbrick python=$ANACONDA;
      source activate yellowbrick;
      conda install coveralls;
  fi

script:
- python -m nltk.downloader popular
- make test

after_success: coveralls

notifications:
  slack:
    secure: YvJ/aF5Ev2wgqoSc+QG4LA8XCovdfW7w7FiOMiRA6zrLjywEC12KzVDBTotIRFJVncCmh/WuyTCJUYfYA1Q0MrySpAF8cDr4fdGnO3skopU9Nx7pVuXOrHQ2LcVTEE0sGAeYH+hGrT+7TsbGR9iwki5xkkT0g1QEgJqvLhph6Y6gQMAtPceXU7wnIJf9Fn4IdTrDbeAawxhYsuVLTptGSS9UHYsV0P3lwPg1FItduE1UzNhyicBXzj/8f56/xBxNeYEGwFMhE1oad3lm9BRLzpqGwsIHWR5JLIYcX+y1YceFvB+vz4Xsf6H+XaCCb7uzBfC2BAc9+gr0zjUbiLcTyA1LyuR9kOlFCUx/nSGkJyhXcMb+NbA0vK9JY7ss2kempoxCDCkzpjFNasqGJMyPagI3na8YRu1RTTmBJUip9U+oN80Kr4lSMzbLDCDA2LTQBeL3zSSW51foiQPIDowK/CYQSMo/0IVp2x9ronWhDBbszHkXoWCv6/AMzjGhASDDg4AJD40zLo/pcEevcJdTraO915Sp8PtltbLnuuklJSi1xci5O6ja/ldyC7lKPm77z9nlx805349dLTkNpD27xXpALWPUJBNNrVpD3H6SvYB3b2IVgVjENdHZGLcCjlbwgdZ30zPik4Sj/w+8GoGxh5l/V6wHUhwOMm7ZKr7lcXk=
