dist: xenial
language: python
matrix:
  include:
    - name: "Python 3.6 on Xenial Linux"
      python: '3.6'

    - name: "Python 3.7 on Xenial Linux"
      python: '3.7'

    - name: "Miniconda 3.6 on Xenial Linux"
      env: ANACONDA="3.6"

    - name: "Miniconda 3.7 on Xenial Linux"
      env: ANACONDA="3.7"

before_install:
- sudo apt-get update;
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
    sudo apt-get build-dep python-scipy;
    MINICONDA_OS="Linux";
  fi

install:
- if [[ -z ${ANACONDA} ]]; then
      pip install -r requirements.txt;
      pip install -r tests/requirements.txt;
      pip install coveralls;
    else
      wget https://repo.anaconda.com/miniconda/Miniconda3-latest-$MINICONDA_OS-x86_64.sh -O miniconda.sh;
      bash miniconda.sh -b -p $HOME/miniconda;
      export PATH="$HOME/miniconda/bin:$PATH";
      hash -r;
      conda config --set always_yes yes --set changeps1 no;
      export BASE_PYTHON=`python -c 'import sys; version=sys.version_info[:3]; print("{0}.{1}.{2}".format(*version))'`;
      echo "Base Anaconda Python is $BASE_PYTHON";
      echo "Creating Anaconda Python $ANACONDA conda environment";
      conda config --add channels conda-forge;
      conda env create -f tests/requirements.txt -n yellowbrick python=$ANACONDA;
      source activate yellowbrick;
      conda install coveralls;
  fi

script: 
- python -m nltk.downloader popular
- make test

after_success: coveralls

notifications:
  slack:
    secure: mWKVHmEc22FJSp6Rrnd1j4QYCgZY4NJSrA8kZ5wj2/lf1iHI/CfWGTf7+Qihqe+rt0FOU0+UA9SzvSHRD1bV76q/zINayQ0EyJAfQzvIWIRGGnnMSO/79WoEYF56wwjpc5pLUTh6QV5qqfy+8nNGQ1/uJ0h6FtsUaSa/g61a5ZJEVBIjIpH8PgMxM64dRgJCmAdQuXkBP5Uf3yHlCtYk+Jr+gyXU2oqwMZ1VWgZkEo1Tqo7W9WY8dkOaAkzXDT61OqtcyyTuVSYbmK4i3c84681NBpb7wT6BfiCCAd3tn5AIKCkJVJ0ga0XeF6MdDpnicpku4FaN+fQjwkPiU47o/aFp8RNp27JQ9AhvH7wMuu5O8HDhszjRkfGOlUbuPOTavc22o4j0ShsrLiTQRJRhQQzJoquPuPj5wHqCCN+ice7IVUHj3ZC2jpJKDEYUNnr1fATtOwocimc6PhJM/IoeHgEEHpi37b+AxnhgOFoBlgsq2f4nsRD9JsLHqIpJCHgMjKxc6p3FtcFcXZDlDXQIcCzSRiPhG207dahspA3aPLj4Z+tOLJwh7/PSEfp02kcgPMM/MLYTWcaBv14aYi69kvQoZTfqVY8tIohg3ygda5siOCTTgqGriJYzkmdY5/Dp51kabhl+cEVIxPyY0miqyl3hZjqkqCnnOtg06qqxLLM=
